// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// mh_sample_ne1_2
arma::vec mh_sample_ne1_2(arma::vec fwdnevec, arma::vec fwdnco, double tau, arma::vec prop_sigma, double dh, arma::mat lterms);
RcppExport SEXP _skygrowth_mh_sample_ne1_2(SEXP fwdnevecSEXP, SEXP fwdncoSEXP, SEXP tauSEXP, SEXP prop_sigmaSEXP, SEXP dhSEXP, SEXP ltermsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type fwdnevec(fwdnevecSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type fwdnco(fwdncoSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type prop_sigma(prop_sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type dh(dhSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lterms(ltermsSEXP);
    rcpp_result_gen = Rcpp::wrap(mh_sample_ne1_2(fwdnevec, fwdnco, tau, prop_sigma, dh, lterms));
    return rcpp_result_gen;
END_RCPP
}
// mh_sample_ne2_2
arma::vec mh_sample_ne2_2(arma::vec fwdnevec, arma::vec fwdnco, double tau, arma::vec prop_sigma, double dh, arma::vec zxb, arma::mat lterms);
RcppExport SEXP _skygrowth_mh_sample_ne2_2(SEXP fwdnevecSEXP, SEXP fwdncoSEXP, SEXP tauSEXP, SEXP prop_sigmaSEXP, SEXP dhSEXP, SEXP zxbSEXP, SEXP ltermsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type fwdnevec(fwdnevecSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type fwdnco(fwdncoSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type prop_sigma(prop_sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type dh(dhSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zxb(zxbSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lterms(ltermsSEXP);
    rcpp_result_gen = Rcpp::wrap(mh_sample_ne2_2(fwdnevec, fwdnco, tau, prop_sigma, dh, zxb, lterms));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_skygrowth_mh_sample_ne1_2", (DL_FUNC) &_skygrowth_mh_sample_ne1_2, 6},
    {"_skygrowth_mh_sample_ne2_2", (DL_FUNC) &_skygrowth_mh_sample_ne2_2, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_skygrowth(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
